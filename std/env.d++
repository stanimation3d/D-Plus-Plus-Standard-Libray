// env.d++ - D++ Standard Library: Environment Utilities

namespace std::env {

  // Gets the value of an environment variable
  func get(varname: string) -> string | null {
    return platform::env_get(varname);
  }

  // Sets an environment variable
  func set(varname: string, value: string) -> bool {
    return platform::env_set(varname, value);
  }

  // Removes an environment variable
  func remove(varname: string) -> bool {
    return platform::env_remove(varname);
  }

  // Returns a map of all environment variables
  func all() -> map<string, string> {
    return platform::env_all();
  }

  // Checks if an environment variable exists
  func exists(varname: string) -> bool {
    return get(varname) != null;
  }

  // Expands environment variables in a given string (e.g. "Hello $USER")
  func expand(input: string) -> string {
    let envs = all();
    let output = input;
    for (key, value in envs) {
      output = output.replace("$" + key, value);
    }
    return output;
  }

  // Platform bindings (to be implemented per OS)
  extern namespace platform {
    func env_get(varname: string) -> string | null;
    func env_set(varname: string, value: string) -> bool;
    func env_remove(varname: string) -> bool;
    func env_all() -> map<string, string>;
  }

} // namespace std::env
